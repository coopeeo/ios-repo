name: build and deploy repo

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: build repo
        run: |
          output=$(mktemp -d)
          echo "OUTPUT=$output" >> $GITHUB_ENV
          echo "output dir: $output"
          
          # copy repo template
          cp -r ./public/* "$output/"

          rm Packages || true 2>/dev/null

          mkdir -p tmp
          for deb in debs/*.deb; do
            debname=$(sed 's/\(^debs\/\|.deb$\)//g' <<< "$deb")
            echo "---- processing $deb ($debname) ----"

            workdir="tmp/$debname"
            mkdir -p "$workdir"
            ar x "$deb" control.tar.gz --output="$workdir"

            pushd "$workdir" || exit 1
            tar -xzOf control.tar.gz > control

            if grep -qE "^Architecture: iphoneos-arm64$" control; then
              echo "detected rootless !!"
              sed -i '/^Name: /s/$/ (rootless)/' control
            fi

            popd || exit 1

            # append to Packages
            {
              cat "$workdir/control" | grep -v "^Installed Size"
              printf 'Filename: ./%s\n' "$deb"
              printf 'Size: %d\n' "$(stat -c %s "$deb")"
              printf 'MD5sum: %s\n' "$(md5sum "$deb" | awk '{print $1}')"
              printf '\n\n'
            } >> tmp/Packages
          done

          mv "debs" "$output/"
          bzip2 -kz tmp/Packages -c > "$output/Packages.bz2"

      - name: deploy repo
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.OUTPUT }}
          publish_branch: collect-my-pages
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          disable_nojekyll: true
